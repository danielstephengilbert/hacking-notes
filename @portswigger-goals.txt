There are 269 PortSwigger challenges.
That means I need to do 20 per day to complete them all in 14 days.

1.  2024-12-18 Wednesday

PortSwigger:

SQL Injection

[ COMPLETE ] 1.  SQL injection attack, querying the database type and version on Oracle
[ COMPLETE ] 2.  SQL injection attack, listing the database contents on Oracle
[ COMPLETE ] 3.  Blind SQL injection with conditional errors
[ COMPLETE ] 4.  Visible error-based SQL injection
[ COMPLETE ] 5.  Blind SQL injection with time delays
[ COMPLETE ] 6.  Blind SQL injection with time delays and information retrieval
[ BPRO REQ ] 7.  Blind SQL injection with out-of-band interaction
[ BPRO REQ ] 8.  Blind SQL injection with out-of-band data exfiltration
[ COMPLETE ] 9.  SQL injection with filter bypass via XML encoding

Cross-Site Scripting

[ COMPLETE ] 10. Reflected XSS into HTML context with nothing encoded
[ COMPLETE ] 11. Stored XSS into HTML context with nothing encoded
[ COMPLETE ] 12. DOM XSS in document.write sink using source location.search
[ COMPLETE ] 13. DOM XSS in innerHTML sink using source location.search
[ COMPLETE ] 14. DOM XSS in jQuery anchor href attribute sink using location.search source
[ COMPLETE ] 15. DOM XSS in jQuery selector sink using a hashchange event
[ COMPLETE ] 16. Reflected XSS into attribute with angle brackets HTML-encoded
[ COMPLETE ] 17. Stored XSS into anchor href attribute with double quotes HTML-encoded
[ COMPLETE ] 18. Reflected XSS into a JavaScript string with angle brackets HTML encoded
[ COMPLETE ] 19. DOM XSS in document.write sink using source location.search inside a select element
[ COMPLETE ] 20. DOM XSS in AngularJS expression with angle brackets and double quotes HTML-encoded

-------------------------------------------------------------------------------

2.  2024-12-19 Thursday

Cross Site Scripting

[ COMPLETE ] 1.  Reflected DOM XSS
[ COMPLETE ] 2.  Stored DOM XSS
[ COMPLETE ] 3.  Reflected XSS into HTML context with most tags and attributes blocked
[ COMPLETE ] 4.  Reflected XSS into HTML context with all tags blocked except custom ones
[ COMPLETE ] 5.  Reflected XSS with some SVG markup allowed
[ COMPLETE ] 6.  Reflected XSS in canonical link tag
[ COMPLETE ] 7.  Reflected XSS into a JavaScript string with single quote and backslash escaped
[ COMPLETE ] 8.  Reflected XSS into a JavaScript string with angle brackets and double quotes HTML-encoded and single quotes escaped
[ COMPLETE ] 9.  Stored XSS into onclick event with angle brackets and double quotes HTML-encoded and single quotes and backslash escaped
[ COMPLETE ] 10. Reflected XSS into a template literal with angle brackets, single, double quotes, backslash and backticks Unicode-escaped
[ BPRO REQ ] 11. Exploiting cross-site scripting to steal cookies
[ BPRO REQ ] 12. Exploiting cross-site scripting to capture passwords
[ COMPLETE ] 13. Exploiting XSS to bypass CSRF defenses
[ COMPLETE ] 14. Reflected XSS with AngularJS sandbox escape without strings
[ COMPLETE ] 15. Reflected XSS with AngularJS sandbox escape and CSP
[ COMPLETE ] 16. Reflected XSS with event handlers and href attributes blocked
[ COMPLETE ] 17. Reflected XSS in a JavaScript URL with some characters blocked
[ BPRO REQ ] 18. Reflected XSS protected by very strict CSP, with dangling markup attack
[ COMPLETE ] 19. Reflected XSS protected by CSP, with CSP bypass

Cross-Site Request Forgery

20. CSRF vulnerability with no defenses

-------------------------------------------------------------------------------

3.  2024-12-20 Friday

Cross-Site Request Forgery

1.  CSRF where token validation depends on request method
2.  CSRF where token validation depends on token being present
3.  CSRF where token is not tied to user session
4.  CSRF where token is tied to non-session cookie
5.  CSRF where token is duplicated in cookie
6.  SameSite Lax bypass via method override
7.  SameSite Strict bypass via client-side redirect
8.  SameSite Strict bypass via sibling domain
9.  SameSite Lax bypass via cookie refresh
10. CSRF where Referer validation depends on header being present
11. CSRF with broken Referer validation

Clickjacking

12. Basic clickjacking with CSRF token protection
13. Clickjacking with form input data prefilled from a URL parameter
14. Clickjacking with a frame buster script
15. Exploiting clickjacking vulnerability to trigger DOM-based XSS
16. Multistep clickjacking

DOM-Based Vulns

17. DOM XSS using web messages
18. DOM XSS using web messages and a JavaScript URL
19. DOM XSS using web messages and JSON.parse
20. DOM-based open redirection


===

4.  2024-12-21 Saturday
5.  2024-12-22 Sunday
6.  2024-12-23 Monday
7.  2024-12-24 Tuesday
--  2024-12-25 Wednesday, CHRISTMAS WITH FAMILY (no training)
8.  2024-12-26 Thursday
9.  2024-12-27 Friday
10. 2024-12-28 Saturday
11. 2024-12-29 Sunday
12. 2024-12-30 Monday
13. 2024-12-31 Tuesday
14. 2025-01-01 Wednesday, ALL PORTSWIGGER COMPLETE :)

